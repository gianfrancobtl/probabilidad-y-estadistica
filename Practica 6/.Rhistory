print ("hello World!")
c<- qnorm (0.58)
c
c<- qnorm (0.98)
c<- qnorm (0.98)
c<- qnorm (0.96)
#
c<- qnorm (0.96)
d <- pnorm(0.96)
d <- pnorm(0.00)
# Probabilidad acumulada
c<- qnorm (0.98)
# Normal.
dnorm(0.5, mean = 0, sd = 1)
# Normal.
dnorm(0.0, mean = 0, sd = 1)
pnorm(0, mean = 0, sd = 1)
# Binomial
dbinom(3, 1/2) #puntual
# Binomial
dbinom(3, 1, 1/2) #puntual
# Binomial
dbinom(3, 1, 1/2) #puntual
# Binomial
dbinom(3, 3, 1/2) #puntual
# Binomial
dbinom(3, 2, 1/2) #puntual
# Binomial
dbinom(3, 4, 1/2) #puntual
# Binomial
dbinom(3, 5, 1/2) #puntual
# Binomial
dbinom(3, 0, 1/2) #puntual
# Binomial
dbinom(0, 3, 1/2) #puntual
# Binomial
dbinom(1, 3, 1/2) #puntual
# Binomial
dbinom(2, 3, 1/2) #puntual
# Binomial
dbinom(3, 3, 1/2) #puntual
# Binomial
dbinom(3, 3, 1/2) * dhyper(1, 4, 1, 1) #puntual
# Binomial
dbinom(3, 3, 1/2) * dhyper(0, 4, 1, 1) #puntual
# Binomial
dbinom(0, 3, 1/2) * dhyper(0, 4, 1, 1) #puntual
# Binomial
dbinom(0, 3, 1/2) * dhyper(1, 4, 1, 1) #puntual
# Binomial
n = 0
dbinom(n, 3, 1/2) * dhyper(1, 4, 1, n) #puntual
# Binomial
dbinom(0, 3, 1/2) * dhyper(0, 4, 1, 1) #puntual
# Binomial
dbinom(0, 3, 1/2) * dhyper(1, 1, 4, 1) #puntual
# Binomial
dbinom(0, 3, 1/2) * dhyper(0, 1, 4, 1) #puntual
# Binomial
dbinom(0, 3, 1/2) * dhyper(1, 1, 4, 1) #puntual
# Binomial
dbinom(1, 3, 1/2) * dhyper(1, 1, 4, 2) #puntual
# Binomial
dbinom(1, 3, 1/2) * dhyper(1, 1, 4, 2) #puntual
# Binomial
dbinom(1, 3, 1/2) * dhyper(0, 1, 4, 2) #puntual
# Binomial
dbinom(2, 3, 1/2) * dhyper(0, 1, 4, 3) #puntual
# Binomial
dbinom(2, 3, 1/2) * dhyper(1, 1, 4, 3) #puntual
# Binomial
dbinom(3, 3, 1/2) * dhyper(0, 1, 4, 4) #puntual
# Binomial
dbinom(3, 3, 1/2) * dhyper(1, 1, 4, 4) #puntual
cov(tabla)
# Calculo de covarianza y correlación con un ejemplo:
tabla <- matrix (
c (0.13, 0.02, 0.11, 0.03, 0.03,
0.06, 0.01, 0.04, 0.02, 0.00,
0.08, 0.03, 0.24, 0.2, 0.03)
)
cov(tabla)
# Calculo de covarianza y correlación con un ejemplo:
tabla <- matrix (
c (0.13, 0.02, 0.11, 0.03, 0.03,
0.06, 0.01, 0.04, 0.02, 0.00,
0.08, 0.03, 0.24, 0.2, 0.03), nrow = 3, byrow = TRUE
)
esperanza = sum(c(100, 120, 140)*rowSums(tabla))
esperanza-x-cuadrado = c(100, 120, 140)^2*rowSums(tabla)
esperanzaXCuadrado = c(100, 120, 140)^2*rowSums(tabla)
vx <- sum (esperanzaXCuadrado) - (esperanza)^2
vx
esperanza = sum(c(100, 120, 140)*rowSums(tabla))
esperanzaXCuadrado = sum(c(100, 120, 140)^2*rowSums(tabla))
vx <- (esperanzaXCuadrado) - (esperanza)^2
vx
esperanza = sum(c(100, 120, 140)*rowSums(tabla))
esperanzaXCuadrado = sum(c(100, 120, 140)^2*rowSums(tabla))
vx <- (esperanzaXCuadrado) - (esperanza)^2
vx
esperanza = sum(c(100, 120, 140)*rowSums(tabla))^2
esperanzaXCuadrado = sum(c(100, 120, 140)^2*rowSums(tabla))
vx <- (esperanzaXCuadrado) - (esperanza)
vx
esperanza =
vx <- sum (c(100, 120, 140)^2*rowSums(tabla)) - (sum(c(100, 120, 140)*rowSums(tabla)))^2
vx
# Calculo de covarianza y correlación con un ejemplo:
tabla <- matrix (
c (0.13, 0.02, 0.11, 0.03, 0.00,
0.06, 0.01, 0.04, 0.02, 0.00,
0.08, 0.03, 0.24, 0.2, 0.03), nrow = 3, byrow = TRUE
)
esperanza =
vx <- sum (c(100, 120, 140)^2*rowSums(tabla)) - (sum(c(100, 120, 140)*rowSums(tabla)))^2
vx
vy <- sum(c(80, 90, 100, 120, 130)^2*colSums(tabla)) - sum(c(80, 90, 100, 120, 130)*colSums((tabla)))^2
vy
colSums(tabla)
cov(rowSums(tabla), colSums(tabla))
# Desvio Standard
dsx = sqrt (vx)
dsy = sqrt (vy)
# Esperanza (v.a. discreta)
ex = sum (c(100, 120, 140)*rowSums(tabla))
ey = sum (c(80, 90, 100, 120, 130)*colSums(tabla))
exy = sum((sum (c(100, 120, 140) * tabla)) * c(80, 90, 100, 120, 130))
# Esperanza (v.a. discreta)
ex = sum (c(100, 120, 140)*rowSums(tabla))
exy = (sum (c(100, 120, 140) * tabla)) * c(80, 90, 100, 120, 130)
(sum (c(100, 120, 140) * tabla))
exy
a <- c(80, 90, 100, 120, 130)
b <- c(100, 120, 140)
for (i in 1:5) {
for (j in 1:3){
exy <- exy + tabla [i,j] * a[i] * b[j]
}
}
for (i in 1:5) {
for (j in 1:3)
exy <- exy + tabla [i,j] * a[i] * b[j]
}
a[3]
for (i in 1:5) {
for (j in 1:3){
exy <- (exy + tabla [i,j] * a[i] * b[j])
}
}
exy
tabla [1,1] * a[1] * b[1]
tabla [1,2] * a[1] * b[2]
for (i in 1:5) {
for (j in 1:3) {
exy + tabla [i,j] * a[i] * b[j]
}
}
exy = 0
a <- c(80, 90, 100, 120, 130)
b <- c(100, 120, 140)
for (i in 1:5) {
for (j in 1:3) {
exy <- (exy + tabla [i,j] * a[i] * b[j])
}
}
for (i in 1:3) {
for (j in 1:5) {
exy <- (exy + tabla [i,j] * a[i] * b[j])
}
}
exy = 0
a <- c(80, 90, 100, 120, 130)
b <- c(100, 120, 140)
for (i in 1:3) {
for (j in 1:5) {
exy <- (exy + tabla [i,j] * a[i] * b[j])
}
}
for (i in 1:3) {
for (j in 1:5) {
exy <- (exy + tabla [i,j] * a[j] * b[i])
}
}
exy = 0
a <- c(80, 90, 100, 120, 130)
b <- c(100, 120, 140)
for (i in 1:3) {
for (j in 1:5) {
exy <- (exy + tabla [i,j] * a[j] * b[i])
}
}
exy
a <- c(80, 90, 100, 120, 130)
b <- c(100, 120, 140)
for (i in 1:3) {
for (j in 1:5) {
exy <- (exy + tabla [i,j] * a[j] * b[i])
}
}
exy = 0
a <- c(80, 90, 100, 120, 130)
b <- c(100, 120, 140)
for (i in 1:3) {
for (j in 1:5) {
exy <- (exy + tabla [i,j] * a[j] * b[i])
}
}
# Funcion para la covarianza
covarianza <- exy - ex * ey
# Correlación
correlacion <- covarianza / (vx*vy)
# Correlación
correlacion <- covarianza/(vx*vy)
# Correlación
correlacion <- covarianza/(dsx*dsy)
qnorm (-1.34) #valores previos a la acumulada p.
qnorm (1.34) #valores previos a la acumulada p.
qnorm (1.34) #valores previos a la acumulada p.
pnorm(1.34, mean = 0, sd = 1) #acumulada
qnorm (-1.34, 0, 1) #valores previos a la acumulada p.
qnorm (-1.34, mean=0, sd=1) #valores previos a la acumulada p.
qnorm (-1.34, mean=0, sd=1) #valores previos a la acumulada p.
qnorm (1.34, mean=0, sd=1) #valores previos a la acumulada p.
qnorm(1.34, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
qnorm(1.34, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
pnorm(1.34, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
qnorm (0.9) #valores previos a la acumulada p.
1 - pnorm(1.34, mean = 0, sd = 1) + pnorm(-1.34, 0, 1) #acumulada
pnorm(-1.34, 0, 1)
1 - pnorm(1.34, mean = 0, sd = 1) + pnorm(-1.34, 0, 1) #acumulada
pnorm(1.5, mean = 0, sd = 1) #acumulada
pnorm(-1.5, mean = 0, sd = 1) #acumulada
1-pnorm(-1.5, mean = 0, sd = 1) #acumulada
qnorm (0.95) #valores previos a la acumulada p.
pnorm(4, mean = 4, sd = 0.49) #acumulada
pnorm(5.4, mean = 4, sd = 0.49) - pnorm(4, mean = 4, sd = 0.49) #acumulada
pnorm (2) - pnorm (0)
pnorm (2, 1, 0) - pnorm (0, 1, 0)
pnorm (2, 1, 0) - pnorm (0, 1, 0)
pnorm(5.4, mean = 4, sd = 0.49) - pnorm(4, mean = 4, sd = 0.49) #acumulada
pnorm (2,0,1) - pnorm (0,0,1)
pnorm(5.4, mean = 4, sd = 0.49) - pnorm(4, mean = 4, sd = 0.49)
pnorm (2,0,1) - pnorm (0,0,1)
pnorm(5.4, mean = 4, sd = 0.49) - pnorm(4, mean = 4, sd = 0.49)
pnorm(4, mean = 4, sd = 0.49)
pnorm (0,0,1)
pnorm(5.4, mean = 4, sd = 0.49)
pnorm (2,0,1)
pnorm (2,0,1) - pnorm (0,0,1)
pnorm (0,0,1)
pnorm (2,0,1)
pnorm(5.4, mean = 4, sd = 0.49) #acumulada
pnorm(5.4, mean = 0, sd = 1) #acumulada
pnorm(2, mean = 0, sd = 1) #acumulada
1- pnorm (2,0,1)
1-pnorm(5.4, mean = 4, sd = 0.49) #acumulada
pnorm (2,0,1)
1-pnorm (2,0,1)
pnorm(4, mean = 5, sd = 0.25) #acumulada
pnorm(4, mean = 5, sd = 0.5) #acumulada
pnorm(4.8, mean = 5, sd = 0.5) - pnorm(4, mean = 5, sd = 0.5) #acumulada
1-pnorm (2,4,0.7)
pnorm (2,4,0.7)
pnorm(5.5, mean = 5, sd = 0.5) - pnorm(4.8, mean = 5, sd = 0.5) #acumulada
1-pnorm(5.5, mean = 5, sd = 0.5)  #acumulada
pnorm (2)-pnorm(0)
pnorm(5.4, mean = 4, sd = 0.7) - pnorm(4, mean = 4, sd = 0.7) #acumulada
1-pnorm(5.4, mean = 4, sd = 0.7) #acumulada
1-pnorm (2)
# Multinomial
dmultinom(c(12,12,1), size = 25, c(0.5,0.4772,0.0228), log = FALSE)
pnorm(5.6, mean = 6, sd = 0.8) #acumulada
pnorm(5.6, mean = 6, sd = 0.8) #acumulada
pnorm(-0.5,0,1)
pnorm(7.12, mean = 6, sd = 0.8)-pnorm(5.6, mean = 6, sd = 0.8) #acumulada
pnorm(1.4,0,1)pnorm(-0.5,0,1)
pnorm(1.4,0,1)-pnorm(-0.5,0,1)
1-pnorm(1.4,0,1)
1-pnorm(7.12, mean = 6, sd = 0.8) #acumulada
1-pnorm(1.4,0,1)
1-pnorm(1.4)
# Multinomial
dmultinom(c(5,12,4), size = 21, c(0.3085375,0.6107058,0.08075666), log = FALSE)
pnorm(7.12, mean = 6, sd = 0.8) - pnorm(5.6, mean = 6, sd = 0.8)#acumulada
pnorm(5.6, mean = 6, sd = 0.8
pnorm(5.6, mean = 6, sd = 0.8)
pnorm(5.6, mean = 6, sd = 0.8)
qnorm (0.8) #valores previos a la acumulada p.
qnorm (0.2) #valores previos a la acumulada p.
# Esperanza (v.a. discreta)
ex = sum (c(100, 120, 140) * rowSums(tabla))
# -----------
# Calculo de covarianza y correlación con un ejemplo:
tabla <- matrix (
c (0.13, 0.02, 0.11, 0.03, 0.00,
0.06, 0.01, 0.04, 0.02, 0.00,
0.08, 0.03, 0.24, 0.2, 0.03), nrow = 3, byrow = TRUE
)
# Esperanza (v.a. discreta)
ex = sum (c(100, 120, 140) * rowSums(tabla))
ex
for (i in 1:8){
sum(i*dbinom(i,8,0.8)+dbinom(i,8,0.3))
}
for (i in 1:8){
e <- sum(i*dbinom(i,8,0.8)+dbinom(i,8,0.3))
}
e
for (i in 1:9){
e <- sum(i*dbinom(i,8,0.8)+dbinom(i,8,0.3))
}
e
for (i in 0:8){
e <- sum(i*(dbinom(i,8,0.8)+dbinom(i,8,0.3)))
}
e
for (i in 0:8){
e <- e + sum(i*(dbinom(i,8,0.8)+dbinom(i,8,0.3)))
}
e
for (i in 1:8){
e <- e + sum(i*(dbinom(i,8,0.8)+dbinom(i,8,0.3)))
}
e
for (i in 1:8){
e <- e + sum(i*(dbinom(i,8,0.8)*0.1 + dbinom(i,8,0.3)*0.9))
}
e
for (i in 1:8){
e <- sum(i*(dbinom(i,8,0.8)*0.1 + dbinom(i,8,0.3)*0.9))
}
e
# Hipergeometrica
dhyper(2, 7, 5, 3) #puntual
# Binomial negativa
dnbinom(2, size=10, prob=0.2) #puntual
# Binomial negativa
dnbinom(2, size=10, prob=0.2) #puntual
ppois(4, lambda=3 ) #acumulada
pbinom(2, size=8, prob=0.185) #acumulada
# Poisson
dpois(3, lambda=3 ) #puntual
# Binomial
dbinom(1, size=2, prob=1/2) #puntual
# Binomial
dbinom(1, size=2, prob=1/2)*dhyper(0, 3, 5, 2) #puntual
# Binomial
dbinom(1, size=2, prob=1/2)*dhyper(0, 3, 5, 2)+ dbinom(0, size=2, prob=1/2)*dhyper(1, 3, 5, 2)#puntual
phyper(0,3,5,2)*pbinom(1,2,0.5) + phyper(1,3,5,2)*pbinom(0,2,0.5)
dhyper(0,3,5,2)*dbinom(1,2,0.5) + dhyper(1,3,5,2) *dbinom(0,2,0.5)
dhyper(0,1,0,1)
dhyper(0,1,1,1)
# Hipergeometrica
dhyper(0, 1, 1, 2) #puntual
# Hipergeometrica
dhyper(0, 1, 1, 1) #puntual
# Hipergeometrica
dhyper(0, 1, 0, 1) #puntual
# Hipergeometrica
dhyper(0, 2, 0, 1) #puntual
dhyper(0,1,2,1)
dhyper(0,1,2,2)
dhyper(0,1,2,2)
dhyper(0,1,1,1)
dhyper(0,1,2,1)
dhyper(0,1,2,2)
dhyper(0,2,2,2)
dhyper(1,2,2,2)
3/8
setwd("~/Documents/Año 2020 - Cs. de la computación/Probabilidad y estadística/probabilidad-y-estadistica/Practica 6")
# EJERCICIO 1
alfajores <- read.table("alfajores.txt", header = TRUE)
View(alfajores)
# a) la probabilidad de que una caja provenga de la sede Quilmes.
alfajores[,2]
# a) la probabilidad de que una caja provenga de la sede Quilmes.
alfajores[,1]
# a) la probabilidad de que una caja provenga de la sede Quilmes.
alfajores[,2]
# a) la probabilidad de que una caja provenga de la sede Quilmes.
alfajores[,2] == 1# Tira de 1s y 0s según fabrica.
proba_quilmes = mean(alfajores[,2] == 0)
proba_quilmes
# b) la probabilidad de que una caja sea producida por la sede Quilmes y tenga 3 alfajores defectuosos.
mean (alfajores$fabrica == 0 & alfajores$defectuosos == 3)
sum(alfajores$fabrica == 0 & alfajores$defectuosos == 3)/500
# b) la probabilidad de que una caja sea producida por la sede Quilmes y tenga 3 alfajores defectuosos.
proba_quilmes_y_3def <- mean (alfajores$fabrica == 0 & alfajores$defectuosos == 3)
proba_quilmes_y_3def
father.son[1:5,]
# ESTATURA DE PADRES E HIJOS (PIERSON).
library(UsingR)
father.son[1:5,]
# MEDIDAS DE POSICION
mean(father.son$fheight > 0 & father.son$sheight > 60) # promedio de altura de los padres.
muestraacotada <- father.son[1:5,]
# MEDIDAS DE POSICION
sum(muestraacotada$fheight > 0 & muestraacotada$sheight > 60) # promedio de altura de los padres.
# MEDIDAS DE POSICION
mean(muestraacotada$fheight > 0 & muestraacotada$sheight > 60) # promedio de altura de los padres.
# b) la probabilidad de que una caja sea producida por la sede Quilmes y tenga 3 alfajores defectuosos.
alfajores$fabrica == 0
proba_quilmes <- mean(alfajores$fabrica == 0)
proba_quilmes # 0.256
proba_quilmes <- mean(alfajores$fabrica == 0)
proba_quilmes <- mean(alfajores[,2] == 0)
proba_quilmes # 0.256
alfajores$defectuosos == 3
# c) la funcion de probabilidad puntual conjunta del vector (X, Y ).
proba_puntual_conjunta = function(x,y){
mean (alfajores$fabrica == y & alfajores$defectuosos == x)
}
# Ejemplos:
proba_puntual_conjunta(0, 3)
# Ejemplos:
proba_puntual_conjunta(0, 3)
# c) la funcion de probabilidad puntual conjunta del vector (X, Y ).
proba_puntual_conjunta = function(x,y){
mean (alfajores$defectuosos == x & alfajores$fabrica == y)
}
# Ejemplos:
proba_puntual_conjunta(0, 3)
View(proba_puntual_conjunta)
# Ejemplos:
proba_puntual_conjunta(3,0)
proba_puntual_conjunta(3, 1)
# d) la esperanza y la varianza de X.
mean (alfajores$defectuosos)
var (alfajores$defectuosos)
esper_x = mean(alfajores[,1])
var_x = var(alfajores[,1])
# e) la probabilidad de que una caja producida por la sede Quilmes tenga 3 alfajores defectuosos.
proba_3def_dado_quilmes <- proba_quilmes_y_3def/proba_quilmes
#e) P(X=3 | Y=0)
proba_puntual_conjunt(3,0) / mean(alfajores[,2] ==0)
mean (alfajores$fabrica == y & alfajores$defectuosos == x)
proba_caja_quilmes = mean(alfajores[,2] ==  0)
#b)
mean (alfajores$fabrica == 0 & alfajores$defectuosos == 3)
#c)
proba_puntual_conjunt = function(x,y){
mean (alfajores$fabrica == y & alfajores$defectuosos == x)
}
proba_puntu_x = function(x){
proba_puntual_conjunt(x,0)+ proba_puntual_conjunt(x,1)
}
#d)
probas_puntuales = function(rx,px) {
probas = 1:length(rx)
for (x in 1:length(rx)) { #Evaluo todas las probas puntuales
probas[x] = px(rx[x])
}
probas
}
esper_x = mean(alfajores[,1])
var_x = var(alfajores[,1])
#e) P(X=3 | Y=0)
proba_puntual_conjunt(3,0) / mean(alfajores[,2] ==0)
# e) la probabilidad de que una caja producida por la sede Quilmes tenga 3 alfajores defectuosos.
proba_3def_dado_quilmes <- proba_quilmes_y_3def/proba_quilmes
proba_puntual_conjunta(3, 0)/proba_quilmes
# f) la probabilidad de que una caja producida por la empresa y elegida al azar tenga 3 alfajores defectuosos (es decir X = 3).
proba_pilar_y_3def <- mean (alfajores$fabrica == 1 & alfajores$defectuosos == 3)
proba_3def <- proba_pilar_y_3def + proba_quilmes_y_3def
#f) P(X=3)
proba_x3 = mean(alfajores[,1] ==3)
proba_3def <- proba_pilar_y_3def + proba_quilmes_y_3def
proba_3def
mean (alfajores$defectuosos == 3)
# g) la probabilidad de que una caja con 3 alfajores defectuosos haya sido producida por la sede Quilmes.
proba_quilmes_dado_3def <- proba_quilmes_y_3def/proba_3def
#g) P(Y=0 | X=3)
proba_puntual_conjunt(3,0) / mean(alfajores[,1] == 3)
# EJERCICIO 2
lamparas <- read.csv("lamparas.txt", header = FALSE)
View(lamparas)
# a) Estimar la probabilidad de que una lampara producida por esta fabrica dure ma ́s de 30 horas.
# P (x > 30)
proba_dure_mas_30hs <- mean (lamparas$V1 > 30)
#a)
mean(lamparas >30)
