print ("hello World!")
c<- qnorm (0.58)
c
c<- qnorm (0.98)
c<- qnorm (0.98)
c<- qnorm (0.96)
#
c<- qnorm (0.96)
d <- pnorm(0.96)
d <- pnorm(0.00)
# Probabilidad acumulada
c<- qnorm (0.98)
# Normal.
dnorm(0.5, mean = 0, sd = 1)
# Normal.
dnorm(0.0, mean = 0, sd = 1)
pnorm(0, mean = 0, sd = 1)
# Binomial
dbinom(3, 1/2) #puntual
# Binomial
dbinom(3, 1, 1/2) #puntual
# Binomial
dbinom(3, 1, 1/2) #puntual
# Binomial
dbinom(3, 3, 1/2) #puntual
# Binomial
dbinom(3, 2, 1/2) #puntual
# Binomial
dbinom(3, 4, 1/2) #puntual
# Binomial
dbinom(3, 5, 1/2) #puntual
# Binomial
dbinom(3, 0, 1/2) #puntual
# Binomial
dbinom(0, 3, 1/2) #puntual
# Binomial
dbinom(1, 3, 1/2) #puntual
# Binomial
dbinom(2, 3, 1/2) #puntual
# Binomial
dbinom(3, 3, 1/2) #puntual
# Binomial
dbinom(3, 3, 1/2) * dhyper(1, 4, 1, 1) #puntual
# Binomial
dbinom(3, 3, 1/2) * dhyper(0, 4, 1, 1) #puntual
# Binomial
dbinom(0, 3, 1/2) * dhyper(0, 4, 1, 1) #puntual
# Binomial
dbinom(0, 3, 1/2) * dhyper(1, 4, 1, 1) #puntual
# Binomial
n = 0
dbinom(n, 3, 1/2) * dhyper(1, 4, 1, n) #puntual
# Binomial
dbinom(0, 3, 1/2) * dhyper(0, 4, 1, 1) #puntual
# Binomial
dbinom(0, 3, 1/2) * dhyper(1, 1, 4, 1) #puntual
# Binomial
dbinom(0, 3, 1/2) * dhyper(0, 1, 4, 1) #puntual
# Binomial
dbinom(0, 3, 1/2) * dhyper(1, 1, 4, 1) #puntual
# Binomial
dbinom(1, 3, 1/2) * dhyper(1, 1, 4, 2) #puntual
# Binomial
dbinom(1, 3, 1/2) * dhyper(1, 1, 4, 2) #puntual
# Binomial
dbinom(1, 3, 1/2) * dhyper(0, 1, 4, 2) #puntual
# Binomial
dbinom(2, 3, 1/2) * dhyper(0, 1, 4, 3) #puntual
# Binomial
dbinom(2, 3, 1/2) * dhyper(1, 1, 4, 3) #puntual
# Binomial
dbinom(3, 3, 1/2) * dhyper(0, 1, 4, 4) #puntual
# Binomial
dbinom(3, 3, 1/2) * dhyper(1, 1, 4, 4) #puntual
cov(tabla)
# Calculo de covarianza y correlación con un ejemplo:
tabla <- matrix (
c (0.13, 0.02, 0.11, 0.03, 0.03,
0.06, 0.01, 0.04, 0.02, 0.00,
0.08, 0.03, 0.24, 0.2, 0.03)
)
cov(tabla)
# Calculo de covarianza y correlación con un ejemplo:
tabla <- matrix (
c (0.13, 0.02, 0.11, 0.03, 0.03,
0.06, 0.01, 0.04, 0.02, 0.00,
0.08, 0.03, 0.24, 0.2, 0.03), nrow = 3, byrow = TRUE
)
esperanza = sum(c(100, 120, 140)*rowSums(tabla))
esperanza-x-cuadrado = c(100, 120, 140)^2*rowSums(tabla)
esperanzaXCuadrado = c(100, 120, 140)^2*rowSums(tabla)
vx <- sum (esperanzaXCuadrado) - (esperanza)^2
vx
esperanza = sum(c(100, 120, 140)*rowSums(tabla))
esperanzaXCuadrado = sum(c(100, 120, 140)^2*rowSums(tabla))
vx <- (esperanzaXCuadrado) - (esperanza)^2
vx
esperanza = sum(c(100, 120, 140)*rowSums(tabla))
esperanzaXCuadrado = sum(c(100, 120, 140)^2*rowSums(tabla))
vx <- (esperanzaXCuadrado) - (esperanza)^2
vx
esperanza = sum(c(100, 120, 140)*rowSums(tabla))^2
esperanzaXCuadrado = sum(c(100, 120, 140)^2*rowSums(tabla))
vx <- (esperanzaXCuadrado) - (esperanza)
vx
esperanza =
vx <- sum (c(100, 120, 140)^2*rowSums(tabla)) - (sum(c(100, 120, 140)*rowSums(tabla)))^2
vx
# Calculo de covarianza y correlación con un ejemplo:
tabla <- matrix (
c (0.13, 0.02, 0.11, 0.03, 0.00,
0.06, 0.01, 0.04, 0.02, 0.00,
0.08, 0.03, 0.24, 0.2, 0.03), nrow = 3, byrow = TRUE
)
esperanza =
vx <- sum (c(100, 120, 140)^2*rowSums(tabla)) - (sum(c(100, 120, 140)*rowSums(tabla)))^2
vx
vy <- sum(c(80, 90, 100, 120, 130)^2*colSums(tabla)) - sum(c(80, 90, 100, 120, 130)*colSums((tabla)))^2
vy
colSums(tabla)
cov(rowSums(tabla), colSums(tabla))
# Desvio Standard
dsx = sqrt (vx)
dsy = sqrt (vy)
# Esperanza (v.a. discreta)
ex = sum (c(100, 120, 140)*rowSums(tabla))
ey = sum (c(80, 90, 100, 120, 130)*colSums(tabla))
exy = sum((sum (c(100, 120, 140) * tabla)) * c(80, 90, 100, 120, 130))
# Esperanza (v.a. discreta)
ex = sum (c(100, 120, 140)*rowSums(tabla))
exy = (sum (c(100, 120, 140) * tabla)) * c(80, 90, 100, 120, 130)
(sum (c(100, 120, 140) * tabla))
exy
a <- c(80, 90, 100, 120, 130)
b <- c(100, 120, 140)
for (i in 1:5) {
for (j in 1:3){
exy <- exy + tabla [i,j] * a[i] * b[j]
}
}
for (i in 1:5) {
for (j in 1:3)
exy <- exy + tabla [i,j] * a[i] * b[j]
}
a[3]
for (i in 1:5) {
for (j in 1:3){
exy <- (exy + tabla [i,j] * a[i] * b[j])
}
}
exy
tabla [1,1] * a[1] * b[1]
tabla [1,2] * a[1] * b[2]
for (i in 1:5) {
for (j in 1:3) {
exy + tabla [i,j] * a[i] * b[j]
}
}
exy = 0
a <- c(80, 90, 100, 120, 130)
b <- c(100, 120, 140)
for (i in 1:5) {
for (j in 1:3) {
exy <- (exy + tabla [i,j] * a[i] * b[j])
}
}
for (i in 1:3) {
for (j in 1:5) {
exy <- (exy + tabla [i,j] * a[i] * b[j])
}
}
exy = 0
a <- c(80, 90, 100, 120, 130)
b <- c(100, 120, 140)
for (i in 1:3) {
for (j in 1:5) {
exy <- (exy + tabla [i,j] * a[i] * b[j])
}
}
for (i in 1:3) {
for (j in 1:5) {
exy <- (exy + tabla [i,j] * a[j] * b[i])
}
}
exy = 0
a <- c(80, 90, 100, 120, 130)
b <- c(100, 120, 140)
for (i in 1:3) {
for (j in 1:5) {
exy <- (exy + tabla [i,j] * a[j] * b[i])
}
}
exy
a <- c(80, 90, 100, 120, 130)
b <- c(100, 120, 140)
for (i in 1:3) {
for (j in 1:5) {
exy <- (exy + tabla [i,j] * a[j] * b[i])
}
}
exy = 0
a <- c(80, 90, 100, 120, 130)
b <- c(100, 120, 140)
for (i in 1:3) {
for (j in 1:5) {
exy <- (exy + tabla [i,j] * a[j] * b[i])
}
}
# Funcion para la covarianza
covarianza <- exy - ex * ey
# Correlación
correlacion <- covarianza / (vx*vy)
# Correlación
correlacion <- covarianza/(vx*vy)
# Correlación
correlacion <- covarianza/(dsx*dsy)
qnorm (-1.34) #valores previos a la acumulada p.
qnorm (1.34) #valores previos a la acumulada p.
qnorm (1.34) #valores previos a la acumulada p.
pnorm(1.34, mean = 0, sd = 1) #acumulada
qnorm (-1.34, 0, 1) #valores previos a la acumulada p.
qnorm (-1.34, mean=0, sd=1) #valores previos a la acumulada p.
qnorm (-1.34, mean=0, sd=1) #valores previos a la acumulada p.
qnorm (1.34, mean=0, sd=1) #valores previos a la acumulada p.
qnorm(1.34, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
qnorm(1.34, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
pnorm(1.34, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
qnorm (0.9) #valores previos a la acumulada p.
1 - pnorm(1.34, mean = 0, sd = 1) + pnorm(-1.34, 0, 1) #acumulada
pnorm(-1.34, 0, 1)
1 - pnorm(1.34, mean = 0, sd = 1) + pnorm(-1.34, 0, 1) #acumulada
pnorm(1.5, mean = 0, sd = 1) #acumulada
pnorm(-1.5, mean = 0, sd = 1) #acumulada
1-pnorm(-1.5, mean = 0, sd = 1) #acumulada
qnorm (0.95) #valores previos a la acumulada p.
pnorm(4, mean = 4, sd = 0.49) #acumulada
pnorm(5.4, mean = 4, sd = 0.49) - pnorm(4, mean = 4, sd = 0.49) #acumulada
pnorm (2) - pnorm (0)
pnorm (2, 1, 0) - pnorm (0, 1, 0)
pnorm (2, 1, 0) - pnorm (0, 1, 0)
pnorm(5.4, mean = 4, sd = 0.49) - pnorm(4, mean = 4, sd = 0.49) #acumulada
pnorm (2,0,1) - pnorm (0,0,1)
pnorm(5.4, mean = 4, sd = 0.49) - pnorm(4, mean = 4, sd = 0.49)
pnorm (2,0,1) - pnorm (0,0,1)
pnorm(5.4, mean = 4, sd = 0.49) - pnorm(4, mean = 4, sd = 0.49)
pnorm(4, mean = 4, sd = 0.49)
pnorm (0,0,1)
pnorm(5.4, mean = 4, sd = 0.49)
pnorm (2,0,1)
pnorm (2,0,1) - pnorm (0,0,1)
pnorm (0,0,1)
pnorm (2,0,1)
pnorm(5.4, mean = 4, sd = 0.49) #acumulada
pnorm(5.4, mean = 0, sd = 1) #acumulada
pnorm(2, mean = 0, sd = 1) #acumulada
1- pnorm (2,0,1)
1-pnorm(5.4, mean = 4, sd = 0.49) #acumulada
pnorm (2,0,1)
1-pnorm (2,0,1)
pnorm(4, mean = 5, sd = 0.25) #acumulada
pnorm(4, mean = 5, sd = 0.5) #acumulada
pnorm(4.8, mean = 5, sd = 0.5) - pnorm(4, mean = 5, sd = 0.5) #acumulada
1-pnorm (2,4,0.7)
pnorm (2,4,0.7)
pnorm(5.5, mean = 5, sd = 0.5) - pnorm(4.8, mean = 5, sd = 0.5) #acumulada
1-pnorm(5.5, mean = 5, sd = 0.5)  #acumulada
pnorm (2)-pnorm(0)
pnorm(5.4, mean = 4, sd = 0.7) - pnorm(4, mean = 4, sd = 0.7) #acumulada
1-pnorm(5.4, mean = 4, sd = 0.7) #acumulada
1-pnorm (2)
# Multinomial
dmultinom(c(12,12,1), size = 25, c(0.5,0.4772,0.0228), log = FALSE)
pnorm(5.6, mean = 6, sd = 0.8) #acumulada
pnorm(5.6, mean = 6, sd = 0.8) #acumulada
pnorm(-0.5,0,1)
pnorm(7.12, mean = 6, sd = 0.8)-pnorm(5.6, mean = 6, sd = 0.8) #acumulada
pnorm(1.4,0,1)pnorm(-0.5,0,1)
pnorm(1.4,0,1)-pnorm(-0.5,0,1)
1-pnorm(1.4,0,1)
1-pnorm(7.12, mean = 6, sd = 0.8) #acumulada
1-pnorm(1.4,0,1)
1-pnorm(1.4)
# Multinomial
dmultinom(c(5,12,4), size = 21, c(0.3085375,0.6107058,0.08075666), log = FALSE)
pnorm(7.12, mean = 6, sd = 0.8) - pnorm(5.6, mean = 6, sd = 0.8)#acumulada
pnorm(5.6, mean = 6, sd = 0.8
pnorm(5.6, mean = 6, sd = 0.8)
pnorm(5.6, mean = 6, sd = 0.8)
qnorm (0.8) #valores previos a la acumulada p.
qnorm (0.2) #valores previos a la acumulada p.
# Esperanza (v.a. discreta)
ex = sum (c(100, 120, 140) * rowSums(tabla))
# -----------
# Calculo de covarianza y correlación con un ejemplo:
tabla <- matrix (
c (0.13, 0.02, 0.11, 0.03, 0.00,
0.06, 0.01, 0.04, 0.02, 0.00,
0.08, 0.03, 0.24, 0.2, 0.03), nrow = 3, byrow = TRUE
)
# Esperanza (v.a. discreta)
ex = sum (c(100, 120, 140) * rowSums(tabla))
ex
for (i in 1:8){
sum(i*dbinom(i,8,0.8)+dbinom(i,8,0.3))
}
for (i in 1:8){
e <- sum(i*dbinom(i,8,0.8)+dbinom(i,8,0.3))
}
e
for (i in 1:9){
e <- sum(i*dbinom(i,8,0.8)+dbinom(i,8,0.3))
}
e
for (i in 0:8){
e <- sum(i*(dbinom(i,8,0.8)+dbinom(i,8,0.3)))
}
e
for (i in 0:8){
e <- e + sum(i*(dbinom(i,8,0.8)+dbinom(i,8,0.3)))
}
e
for (i in 1:8){
e <- e + sum(i*(dbinom(i,8,0.8)+dbinom(i,8,0.3)))
}
e
for (i in 1:8){
e <- e + sum(i*(dbinom(i,8,0.8)*0.1 + dbinom(i,8,0.3)*0.9))
}
e
for (i in 1:8){
e <- sum(i*(dbinom(i,8,0.8)*0.1 + dbinom(i,8,0.3)*0.9))
}
e
# Hipergeometrica
dhyper(2, 7, 5, 3) #puntual
# Binomial negativa
dnbinom(2, size=10, prob=0.2) #puntual
# Binomial negativa
dnbinom(2, size=10, prob=0.2) #puntual
ppois(4, lambda=3 ) #acumulada
pbinom(2, size=8, prob=0.185) #acumulada
# Poisson
dpois(3, lambda=3 ) #puntual
# Binomial
dbinom(1, size=2, prob=1/2) #puntual
# Binomial
dbinom(1, size=2, prob=1/2)*dhyper(0, 3, 5, 2) #puntual
# Binomial
dbinom(1, size=2, prob=1/2)*dhyper(0, 3, 5, 2)+ dbinom(0, size=2, prob=1/2)*dhyper(1, 3, 5, 2)#puntual
phyper(0,3,5,2)*pbinom(1,2,0.5) + phyper(1,3,5,2)*pbinom(0,2,0.5)
dhyper(0,3,5,2)*dbinom(1,2,0.5) + dhyper(1,3,5,2) *dbinom(0,2,0.5)
dhyper(0,1,0,1)
dhyper(0,1,1,1)
# Hipergeometrica
dhyper(0, 1, 1, 2) #puntual
# Hipergeometrica
dhyper(0, 1, 1, 1) #puntual
# Hipergeometrica
dhyper(0, 1, 0, 1) #puntual
# Hipergeometrica
dhyper(0, 2, 0, 1) #puntual
dhyper(0,1,2,1)
dhyper(0,1,2,2)
dhyper(0,1,2,2)
dhyper(0,1,1,1)
dhyper(0,1,2,1)
dhyper(0,1,2,2)
dhyper(0,2,2,2)
dhyper(1,2,2,2)
3/8
library(UsingR)
install.packages("UsingR", dependencies=TRUE)
library(UsingR)
father.son[1;10,]
father.son[1:10,]
par(mfrow=c(1,2))
with(data=father.son, hist(fheight, probability = TRUE))
with(data=father.son, hist(sheight, probability = TRUE))
# Boxplot
boxplot(father.son$fheight, father.son$sheight, names = c("Padres", "Hijos"))
# DEPARTAMENTOS EN VENTA EN BS AS (2016)
departamentos <- read.csv("departamentos.csv", header = TRUE)
# DEPARTAMENTOS EN VENTA EN BS AS (2016)
departamentos <- read.csv("departamentos.csv", header = TRUE)
# DEPARTAMENTOS EN VENTA EN BS AS (2016)
departamentos <- read.csv("departamentos.csv", header = TRUE)
setwd("~/Documents/Año 2020 - Cs. de la computación/Probabilidad y estadística/estadística-descriptiva")
# DEPARTAMENTOS EN VENTA EN BS AS (2016)
departamentos <- read.csv("departamentos.csv", header = TRUE)
# DEPARTAMENTOS EN VENTA EN BS AS (2016)
departamentos <- read.csv("departamentos.csv", header = TRUE)
dim(departamentos)
departamentos[1:10,]
View(departamentos)
mean(departamentos$M2)
View(departamentos)
# DEPARTAMENTOS EN VENTA EN BS AS (2016)
departamentos <- read.csv("departamentos-en-venta-2015.csv", header = TRUE)
# DEPARTAMENTOS EN VENTA EN BS AS (2016)
departamentos <- read.csv("departamentos-en-venta-2015.csv", header = TRUE)
# DEPARTAMENTOS EN VENTA EN BS AS (2016)
departamentos <- read.csv("departamentos-en-venta-2015.csv", header = TRUE)
# DEPARTAMENTOS EN VENTA EN BS AS (2016)
departamentos <- read.csv("departamentos-en-venta-2015.csv", header = TRUE)
with(data=father.son, plot(fheight, sheight))
# DEPARTAMENTOS EN VENTA EN BS AS (2016)
departamentos <- read.csv("departamentos-en-venta-2016.csv", header = TRUE)
dim(departamentos)
mean(departamentos$)
mean(departamentos$CALLE.NUMERO.ID_ZONAPRO.OPERACION.TIPO.M2.M2CUB.PRECIOTEXT.PRECIOARS.PRECIOARSM.DOLARES.U_S_M2.AMBIENTES.ANTIGUEDAD.BAÑOS.DIRECCION.LOCATION.PUBLICADO.PROCESADO.URL.REVISION.NOTA.DIRECCION_NORMALIZADA.BARRIO.COMUNA.CODIGO_POSTAL.CODIGO_POSTAL_ARGENTINO.LATITUD.LONGITUD)
mean(departamentos$M2)
departamentos[1:10,]
mean(departamentos$M2)
median(departamentos$M2)
quantile(departamentos$M2)
# Correlación entre variables:
cor (father.son$fheight, father.son$sheight)
# Recta de regresión lineal estimada.
ajuste <- lm(sheight~fheight, data = father.son)
with(data=father.son, plot(fheight, sheight))
abline (ajuste$coefficients)
ajuste2 <- l1fit(father.son$fheight, father.son$sheight)
install.packages("L1pack")
ajuste2 <- l1fit(father.son$fheight, father.son$sheight)
install.packages(L1Fit)
install.packages("L1Fit")
library(L1pack)
ajuste2 <- l1fit(father.son$fheight, father.son$sheight)
abline (ajuste2$coefficients)
abline (ajuste$coefficients)
# Medidas de posición
mean(father.son$fheight)
mean(father.son$sheight) # promedio de altura de los hijos.
quantile(father.son$fheight)
mean(father.son$fheight, 0.1)
median(father.son$fheight)
var(father.son$fheight)
IQR(father.son$fheight)
deptos <- read.csv("departamentos-en-venta-2016.csv")
View(deptos)
deptos <- read.table("departamentos-en-venta-2016.csv")
setwd("~/Documents/Año 2020 - Cs. de la computación/Probabilidad y estadística/Practica 6")
# EJERCICIO 1
alfajores <- read.table("alfajores.txt", header = TRUE)
table(alfajores)
